#!/usr/bin/python

import psutil
import socket
import smtplib
import argparse
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart

parser = argparse.ArgumentParser(description="Monitor vital system resources and report at critical threasholds.")
#parser.add_argument('-h', '--help', help="Display this useful message then exits.")
parser.add_argument('-v', '--verbose', dest='verbosity', action='store_true', default=False, help="Displays more verbose output.")
parser.add_argument('-o', '--opmode', dest='opmode', help="normal or verbose: normal alerts at threashold while verbose alerts at runtime.")
args = parser.parse_args()

# verbose mode will send a message everytime the script runs
# normal mode will only send messages when threshold is met
opmode = args.opmode or 'normal'
#opmode = 'verbose'

pcts = list()
hostname = socket.gethostname()

for x in range(5):
	pcts.append(psutil.cpu_percent(interval=1))

avg = sum(pcts) / len(pcts)

print("Average CPU Usage Percent over last 5 seconds: " + str(avg))

me = 'ag478028@sempra.com'
you = 'cheselton@sempra.com'

msg = MIMEMultipart('alternative')
msg['From'] = me
msg['To'] = you

if opmode == 'verbose':
	msg['Subject'] = "CPU Status for " + hostname
	text = "Status:\nAverage CPU Usage Percent over last 5 seconds: " + str(avg) + "\n"
	html = """\
<html>
	<head><title>CPU Status for %(hostname)s</title></head>
	<body>
		<h1>Status</h1>
		<p>Average CPU Usage Percent over last 5 seconds: %(avg)s</p>
	</body>
</html>
""" % locals()
elif opmode == 'normal':
	msg['Subject'] = "CPU Warning for " + hostname
	text = "WARNING:\nAverage CPU Usage Percent over the last 5 seconds: " + str(avg) + "\n"
	html = """\
<html>
	<head><title>CPU Status for %(hostname)s</title><head>
	<body>
		<h1>WARNING!</h1>
		<p>Average CPU Usage Percent over last 5 seconds: %(avg)s</p>
	</body>
</html>
""" % locals()

part1 = MIMEText(text, 'plain')
part2 = MIMEText(html, 'html')

msg.attach(part1)
msg.attach(part2)

if opmode == 'verbose' or (opmode == 'normal' and avg >= 30.0):
	s = smtplib.SMTP('smtp.sempra.com')
	s.sendmail(me, you, msg.as_string())
	s.quit()


